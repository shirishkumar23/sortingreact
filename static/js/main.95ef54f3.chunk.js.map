{"version":3,"sources":["logo.svg","sorting/quick_sort.js","sorting/heap_algo.js","sorting/gnome_algo.js","sorting/merge_algo.js","sorting/SortingVisualizer.jsx","sorting/insertion_algo.js","sorting/bubble_algo.js","sorting/cocktail_algo.js","App.js","index.js"],"names":["get_quick_animation","array","low","high","animations","quicksort","i","pivot","j","T","push","pi","get_heap_animation","Math","floor","length","heapify","heapsort","n","largst","l","r","get_gnome_animation","idx","console","log","gnome","getMergeSortAnimations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","k","doMerge","speed_animation","pri_color","check","SortingVisualizer","props","state","size","one_bar_width","status","str","document","getElementById","innerHTML","getElementsByClassName","disabled","style","backgroundColor","animation","key","get_insertion_animation","this","get_bubble_animation","swapped","start","end","cocktail","get_cocktail_animation","count","arr_id","b1_idx","b2_idx","sp","step","setTimeout","col","height","reset_array","min","max","random","setState","slider","value","className","id","type","class","onInput","slider_fun","onClick","sort","map","width","React","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.95ef54f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","export function get_quick_animation(array, low, high) {\r\n  let animations = [];\r\n  animations = quicksort(array, low, high, animations);\r\n  return animations;\r\n}\r\nfunction quicksort(array, low, high, animations) {\r\n  if (low < high) {\r\n    let i = low - 1;\r\n    const pivot = array[high];\r\n    for (let j = low; j < high; ++j) {\r\n      if (array[j] < pivot) {\r\n        i = i + 1;\r\n        const T = array[i];\r\n        array[i] = array[j];\r\n        array[j] = T;\r\n        animations.push([j, i, \"True\"]);\r\n      }\r\n    }\r\n    const T = array[i + 1];\r\n    array[i + 1] = array[high];\r\n    array[high] = T;\r\n    animations.push([i + 1, high, \"True\"]);\r\n    let pi = i + 1;\r\n    quicksort(array, low, pi - 1, animations);\r\n    quicksort(array, pi + 1, high, animations);\r\n  }\r\n  return animations;\r\n}\r\n","export function get_heap_animation(array) {\r\n  let animations = [];\r\n  animations = heapsort(array, animations);\r\n  return animations;\r\n}\r\nfunction heapify(array, n, i, animations) {\r\n  let largst = i;\r\n  let l = 2 * i + 1;\r\n  let r = 2 * i + 2;\r\n  if (l < n && array[i] < array[l]) {\r\n    largst = l;\r\n  }\r\n\r\n  if (r < n && array[largst] < array[r]) {\r\n    largst = r;\r\n  }\r\n  if (largst !== i) {\r\n    const T = array[i];\r\n    array[i] = array[largst];\r\n    array[largst] = T;\r\n    animations.push([i, largst, \"True\"]);\r\n    heapify(array, n, largst, animations);\r\n  }\r\n}\r\nfunction heapsort(array, animations) {\r\n  for (let i = Math.floor(array.length / 2) - 1; i >= 0; --i) {\r\n    heapify(array, array.length, i, animations);\r\n  }\r\n\r\n  for (let i = array.length - 1; i > 0; --i) {\r\n    const T = array[i];\r\n    array[i] = array[0];\r\n    array[0] = T;\r\n    animations.push([0, i, \"True\"]);\r\n    heapify(array, i, 0, animations);\r\n  }\r\n  return animations;\r\n}\r\n","export function get_gnome_animation(array) {\r\n  let animations = [];\r\n  animations = gnome(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction gnome(array, animations) {\r\n  let idx = 0;\r\n  while (idx < array.length) {\r\n    if (idx === 0) {\r\n      idx = idx + 1;\r\n    }\r\n    if (array[idx] >= array[idx - 1]) {\r\n      idx = idx + 1;\r\n    } else {\r\n      const T = array[idx];\r\n      array[idx] = array[idx - 1];\r\n      array[idx - 1] = T;\r\n\r\n      animations.push([idx, idx - 1, \"True\"]);\r\n      idx = idx - 1;\r\n    }\r\n  }\r\n  console.log(array);\r\n  return animations;\r\n}\r\n","export function getMergeSortAnimations(array) {\r\n  let animations = [];\r\n  if (array.length <= 1) return array;\r\n  let auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  let middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, j, \"False\"]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, j, \"False\"]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index i in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[i], \"Over\"]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j], \"Over\"]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, i, \"False\"]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, i, \"False\"]);\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index i in the auxiliary array.\r\n    animations.push([k, auxiliaryArray[i], \"Over\"]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([j, j, \"False\"]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([j, j, \"False\"]);\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index j in the auxiliary array.\r\n    animations.push([k, auxiliaryArray[j], \"Over\"]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./SortingVisualizer.css\";\r\nimport { get_insertion_animation } from \"./insertion_algo.js\";\r\nimport { get_quick_animation } from \"./quick_sort.js\";\r\nimport { get_bubble_animation } from \"./bubble_algo.js\";\r\nimport { get_heap_animation } from \"./heap_algo.js\";\r\nimport { get_cocktail_animation } from \"./cocktail_algo.js\";\r\nimport { get_gnome_animation } from \"./gnome_algo.js\";\r\nimport { getMergeSortAnimations } from \"./merge_algo.js\";\r\nlet speed_animation = 10;\r\nlet num_array = 90;\r\nconst pri_color = \"rgb(19,51,55)\";\r\nlet check = \"yellow\";\r\nlet check_f = \"red\";\r\nlet check_t = \"green\";\r\nlet bar_width = (116 - num_array) / 2;\r\nlet total_width = 1000;\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      size: num_array,\r\n      one_bar_width: bar_width,\r\n      status: 0,\r\n    };\r\n  }\r\n\r\n  sort(str) {\r\n    document.getElementById(\"message\").innerHTML = \"RUNNING\";\r\n    var n = document.getElementsByClassName(\"button\");\r\n    for (var i = 0; i < n.length; i++) {\r\n      n[i].disabled = true;\r\n      n[i].style.backgroundColor = \"red\";\r\n    }\r\n    document.getElementById(\"Arraysize\").disabled = true;\r\n    let animation = [];\r\n    if (str === \"insert\") {\r\n      speed_animation = 2;\r\n      animation = get_insertion_animation(this.state.array).slice();\r\n    } else if (str === \"quick\") {\r\n      speed_animation = 10;\r\n      animation = get_quick_animation(\r\n        this.state.array,\r\n        0,\r\n        this.state.array.length - 1\r\n      );\r\n      animation = animation.slice();\r\n    } else if (str === \"bubble\") {\r\n      speed_animation = 2;\r\n      animation = get_bubble_animation(this.state.array).slice();\r\n    } else if (str === \"heap\") {\r\n      speed_animation = 10;\r\n      animation = get_heap_animation(this.state.array).slice();\r\n    } else if (str === \"cocktail\") {\r\n      speed_animation = 2;\r\n      animation = get_cocktail_animation(this.state.array).slice();\r\n    } else if (str === \"gnome\") {\r\n      speed_animation = 2;\r\n      animation = get_gnome_animation(this.state.array).slice();\r\n    } else if (str === \"merge\") {\r\n      speed_animation = 10;\r\n      animation = getMergeSortAnimations(this.state.array).slice();\r\n    }\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < animation.length; ++i) {\r\n      let arr_id = document.getElementsByClassName(\"array-bar\");\r\n      let [b1_idx, b2_idx, sp] = animation[i];\r\n\r\n      let step = 4;\r\n      while (step > 0) {\r\n        if (step === 4 && sp!=\"Over\") {\r\n          setTimeout(() => {\r\n            console.log(animation[i]);\r\n            arr_id[b1_idx].style.backgroundColor = check;\r\n            arr_id[b2_idx].style.backgroundColor = check;\r\n          }, count * speed_animation);\r\n          ++count;\r\n        }\r\n\r\n        if (step === 3 && sp!=\"Over\") {\r\n          const col = sp === \"True\" ? \"red\" : \"green\";\r\n          setTimeout(() => {\r\n            arr_id[b1_idx].style.backgroundColor = col;\r\n            arr_id[b2_idx].style.backgroundColor = col;\r\n          }, count * speed_animation);\r\n          ++count;\r\n        }\r\n        if (step === 2) {\r\n          if (sp === \"True\") {\r\n            setTimeout(() => {\r\n              const T = arr_id[b1_idx].style.height;\r\n              arr_id[b1_idx].style.height = arr_id[b2_idx].style.height;\r\n              arr_id[b2_idx].style.height = T;\r\n            }, count * speed_animation);\r\n            ++count;\r\n          } else if (sp === \"Over\") {\r\n            setTimeout(() => {\r\n              const T = arr_id[b1_idx].style.height;\r\n              arr_id[b1_idx].style.height = `${b2_idx}px`;\r\n            }, count * speed_animation);\r\n            ++count;\r\n          }\r\n        }\r\n        if (step === 1 && sp!=\"Over\") {\r\n          setTimeout(() => {\r\n            arr_id[b1_idx].style.backgroundColor = pri_color;\r\n            arr_id[b2_idx].style.backgroundColor = pri_color;\r\n          }, count * speed_animation);\r\n          ++count;\r\n        }\r\n\r\n        --step;\r\n      }\r\n    }\r\n    setTimeout(() => {\r\n      document.getElementById(\"message\").innerHTML = \"WAITING\";\r\n      var n = document.getElementsByClassName(\"button\");\r\n      for (var i = 0; i < n.length; i++) {\r\n        n[i].disabled = false;\r\n        n[i].style.backgroundColor = \"aqua\";\r\n      }\r\n\r\n      document.getElementById(\"Arraysize\").disabled = false;\r\n    }, count * speed_animation);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reset_array();\r\n  }\r\n\r\n  reset_array() {\r\n    const array = [];\r\n    for (let i = 0; i < this.state.size; i++) {\r\n      array.push(randomIntFromInterval(50, 500));\r\n    }\r\n    this.setState({ array });\r\n  }\r\n\r\n  slider_fun() {\r\n    var slider = document.getElementById(\"Arraysize\");\r\n    var output = document.getElementById(\"size\");\r\n\r\n    output.innerHTML = slider.value;\r\n    this.state.size = slider.value;\r\n    this.state.one_bar_width = (116 - this.state.size) / 2.5;\r\n\r\n    this.reset_array();\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"buttons-container\">\r\n          <p id=\"message\">WAITING</p>\r\n          <div className=\"slidecontainer\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"5\"\r\n              max=\"92\"\r\n              class=\"slider\"\r\n              id=\"Arraysize\"\r\n              onInput={() => this.slider_fun()}\r\n            ></input>\r\n            <p>\r\n              Array Size :<span id=\"size\"></span>\r\n            </p>\r\n          </div>\r\n          <button className=\"button\" onClick={() => this.reset_array()}>\r\n            Generate New Array\r\n          </button>\r\n          <button className=\"button\" onClick={() => this.sort(\"merge\")}>\r\n            Merge Sort\r\n          </button>\r\n          <button className=\"button\" onClick={() => this.sort(\"quick\")}>\r\n            Quick Sort\r\n          </button>\r\n          <button className=\"button\" onClick={() => this.sort(\"insert\")}>\r\n            Insertion Sort\r\n          </button>\r\n          <button className=\"button\" onClick={() => this.sort(\"heap\")}>\r\n            Heap Sort\r\n          </button>\r\n          <button className=\"button\" onClick={() => this.sort(\"bubble\")}>\r\n            Bubble Sort\r\n          </button>\r\n          <button className=\"button\" onClick={() => this.sort(\"cocktail\")}>\r\n            Cocktail Sort\r\n          </button>\r\n          <button className=\"button\" onClick={() => this.sort(\"gnome\")}>\r\n            Gnome Sort\r\n          </button>\r\n        </div>\r\n        <div className=\"array-container\">\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{\r\n                backgroundColor: pri_color,\r\n                height: `${value}px`,\r\n                width: `${this.state.one_bar_width}px`,\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export function get_insertion_animation(array) {\r\n  const animation = [];\r\n  for (let i = 1; i < array.length; ++i) {\r\n    let j = i;\r\n\r\n    while (j > 0 && array[j - 1] > array[j]) {\r\n      let key = array[j];\r\n      array[j] = array[j - 1];\r\n      array[j - 1] = key;\r\n      animation.push([j - 1, j, \"True\"]);\r\n      --j;\r\n    }\r\n    if (j > 0) {\r\n      animation.push([j - 1, j, \"False\"]);\r\n    }\r\n  }\r\n  return animation;\r\n}\r\n","export function get_bubble_animation(array) {\r\n  const animation = [];\r\n\r\n  for (let i = 0; i < array.length; ++i) {\r\n    for (let j = 0; j < array.length - i - 1; ++j) {\r\n      if (array[j] > array[j + 1]) {\r\n        let key = array[j + 1];\r\n        array[j + 1] = array[j];\r\n        array[j] = key;\r\n        animation.push([j, j + 1, \"True\"]);\r\n      } else {\r\n        animation.push([j, j + 1, \"False\"]);\r\n      }\r\n    }\r\n  }\r\n  console.log(array);\r\n  return animation;\r\n}\r\n","export function get_cocktail_animation(array) {\r\n  let animations = [];\r\n  animations = cocktail(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction cocktail(array, animations) {\r\n  let swapped = true;\r\n  let start = 0;\r\n  let end = array.length - 1;\r\n  while (swapped === true) {\r\n    swapped = false;\r\n\r\n    for (let i = start; i < end; ++i) {\r\n      if (array[i] > array[i + 1]) {\r\n        let T = array[i];\r\n        array[i] = array[i + 1];\r\n        array[i + 1] = T;\r\n        animations.push([i, i + 1, \"True\"]);\r\n        swapped = true;\r\n      }\r\n    }\r\n\r\n    if (swapped === false) {\r\n      break;\r\n    }\r\n\r\n    swapped = false;\r\n    end = end - 1;\r\n\r\n    for (let i = end - 1; i > start - 1; --i) {\r\n      if (array[i] > array[i + 1]) {\r\n        let T = array[i];\r\n        array[i] = array[i + 1];\r\n        array[i + 1] = T;\r\n        animations.push([i, i + 1, \"True\"]);\r\n        swapped = true;\r\n      }\r\n    }\r\n    start = start + 1;\r\n  }\r\n  return animations;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport SortingVisualizer from \"./sorting/SortingVisualizer.jsx\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <SortingVisualizer></SortingVisualizer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}